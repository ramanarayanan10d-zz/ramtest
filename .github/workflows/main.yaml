name: CI
on:
  push:
    branches: main
jobs:
  Upload_APIGateway_Image_ECR:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Checkout_Repo
        uses: actions/checkout@main
        
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ramtest-apigateway
          IMAGE_TAG: 0.0.1
        run: |
          cd application/services/custom_services/apigateway
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  deployment:
    runs-on: 'ubuntu-latest'
    steps:
    - name: 'Checkout'
      uses: 'actions/checkout@v1'

    - name: 'Deploy'
      uses: 'deliverybot/helm@master'
      with:
        token: '${{ github.token }}'
        chart: './devops/cloud/helm'
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
  Upload_FrontEnd_S3:
    runs-on: ubuntu-latest
    needs: Upload_APIGateway_Image_ECR
    steps:
    - name: Check the  branch
      uses: actions/checkout@v2
    - name: Installing the Node and its dependies
      uses: actions/setup-node@v1
      with:
        node-version: 10
    - name: Installing node modules
      working-directory: ./application/client/desktop/ramtest
      run: |
        npm install -g @angular/cli
        npm i node-sass@4.8.3
        npm i @ng-select/ng-select
        npm i 
        ng build
    - name: Uploading dist files into the S3 bucket
      uses: jakejarvis/s3-sync-action@v0.5.1
      with:
        args: --acl public-read --delete
      env:
        AWS_S3_BUCKET: ram-geppetto-test
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
        SOURCE_DIR: "application/client/desktop/ramtest/dist/ramtest"
